System corecallers
/*
 * WARNING: define this (sub)system in a project different form that of resource
 * WARNING: 
 * if an external resource works in a MQTT-enabled QakContext,
 * then also a request-caller must work via MQTT
 */
 
Request cmd 		: cmd(X) // X =  w | s | a | d | h
Reply   replytocmd  : replytocmd(X)
Event    alarm      : alarm(V)


Context ctxresourcecore  ip [host= "127.0.0.1"   port= 8045 ]   
Context ctxcorecaller1   ip [host= "localhost"   port= 8038 ]
 
ExternalQActor resourcecore context ctxresourcecore  

  QActor corecaller1 context ctxcorecaller1{
     State s0 initial { 	  
    	printCurrentMessage       
    	request resourcecore -m cmd : cmd(caller1) 
    }   
	Transition t0 
		whenReply replytocmd -> handleReply 
		whenEvent alarm      -> handleAlarm
	
 	
	State handleReply{
		printCurrentMessage
		delay 5000
		println("       --- caller1 handleReply: emit fire") 
 		emit alarm : alarm(fire)	 
 	}
	Transition t0  
 		whenEvent   alarm -> handleAlarm

	State handleAlarm{
		println("       --- caller1 handleAlarm   ") 
		printCurrentMessage
//		emit alarm : alarm(fire)	//possible LOOP!!
 	}
 	Transition t0 
		whenReply replytocmd -> handleReply 
 		whenEvent   alarm -> handleAlarm
  }  