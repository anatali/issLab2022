plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'application'
}

group = 'unibo'
version = '1.0'
sourceCompatibility = '11'

repositories {
	mavenCentral()
	flatDir {   dirs '../unibolibs'	 }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

//FOR WebSocket NOSTOMP
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation("org.springframework:spring-websocket:5.3.14")
//added
	implementation 'org.webjars:webjars-locator-core'
	implementation 'org.webjars:bootstrap:5.1.3'
	implementation 'org.webjars:jquery:3.6.0'

//-------------------------------------------------------------------------------

	// Align versions of all Kotlin components
	//implementation platform('org.jetbrains.kotlin:kotlin-bom')
	// Use the Kotlin JDK 8 standard library.
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
/*
	//SERVE ALLA INFRASTRUTTURA AD ATTORI
	// This dependency is used by the application.
	implementation 'com.google.guava:guava:30.1.1-jre'
	// Use the Kotlin test library.
	testImplementation 'org.jetbrains.kotlin:kotlin-test'
	// Use the Kotlin JUnit integration.
	testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
	// COROUTINES **********************************
	// https://mvnrepository.com/artifact/org.jetbrains.kotlinx/kotlinx-coroutines-core
	implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: "$kotlinVersion", ext: 'pom'
	// https://mvnrepository.com/artifact/org.jetbrains.kotlinx/kotlinx-coroutines-core-jvm
	implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core-jvm', version: "$kotlinVersion"

*/

	/*  MQTT *************************************************************************************************************** */
	// https://mvnrepository.com/artifact/org.eclipse.paho/org.eclipse.paho.client.mqttv3
	implementation group: 'org.eclipse.paho', name: 'org.eclipse.paho.client.mqttv3', version: '1.2.5'

	/* JSON **************************************************************************************************************** */
	// https://mvnrepository.com/artifact/org.json/json
	implementation group: 'org.json', name: 'json', version: '20220320'

	/* COAP **************************************************************************************************************** */
	// https://mvnrepository.com/artifact/org.eclipse.californium/californium-core
	implementation group: 'org.eclipse.californium', name: 'californium-core', version: '3.5.0'
	// https://mvnrepository.com/artifact/org.eclipse.californium/californium-proxy2
	implementation group: 'org.eclipse.californium', name: 'californium-proxy2', version: '3.5.0'

	// UNIBO **********************************
	implementation name: 'uniboInterfaces'
	implementation name: '2p301'
//	implementation name: 'it.unibo.qakactor-2.7'
//	implementation name: 'unibonoawtsupports'  //required by the old infrastructure

	//implementation name: 'unibo.actor22-1.1'   //using actor22comm  FLAT?
	implementation name: 'unibo.comm22-1.1'
	implementation name: 'unibo.qakactor22-2.8'  //per ApplMessage


}

tasks.named('test') {
	useJUnitPlatform()
}

// -----------------------------------------------------------
mainClassName = 'unibo.webRobot22.WebRobot22Application'

jar {
	println("executing jar")
	from sourceSets.main.allSource
	manifest {
		attributes 'Main-Class': "$mainClassName"
	}
	//Add all project files to the jar
	//from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

