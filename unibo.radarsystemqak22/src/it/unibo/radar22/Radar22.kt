/* Generated by AN DISI Unibo */ 
package it.unibo.radar22

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Radar22 ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "s0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						println("${name} STARTS")
					}
					 transition(edgeName="t04",targetState="showDataOnGui",cond=whenDispatch("polar"))
				}	 
				state("showDataOnGui") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("polar(D,A)"), Term.createTerm("polar(D,A)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								  var D = payloadArg(0)
												var A = payloadArg(1)
												unibo.actor22comm.utils.ColorsOut.outappl( 
												   "RADARGUI : $D/$A", unibo.actor22comm.utils.ColorsOut.BLUE)
						}
					}
					 transition(edgeName="t05",targetState="showDataOnGui",cond=whenDispatch("polar"))
				}	 
			}
		}
}
